---
# Alright we're using the kubeadm init
# You can reset this with:
#  [root@kube-master centos]# kubeadm --help | grep reset
#    reset       Run this to revert any changes made to this host by 'kubeadm init' or 'kubeadm join'.

- name: Default pod-network-cidr
  set_fact:
    arg_pod_network: ""

- name: Set pod-network-cidr when flannel
  set_fact:
    arg_pod_network: "--pod-network-cidr {{ pod_network_cidr }}/16"
  when: pod_network_type == "flannel" or pod_network_type == "none"

# Was trying to use flannel and running with:
#     kubeadm init > /etc/kubeadm.init.txt
# abandonded for now...
- name: Run kubeadm init
  shell: >
    kubeadm init {{ arg_pod_network }} > /etc/kubeadm.init.txt
  args:
    creates: /etc/.kubeadm-complete

- name: Mark init complete
  file:
    path: /etc/.kubeadm-complete
    state: directory

- name: Get join command
  shell: >
    cat /etc/kubeadm.init.txt | grep "kubeadm join"
  register: kubeadm_join_output

- name: Set fact with join command
  set_fact:
    kubeadm_join_command: "{{ kubeadm_join_output.stdout }}"

# --------------------------------------- end flannel.

- include: flannel.yml
  when: pod_network_type == "flannel"

- include: weave.yml
  when: pod_network_type == "weave"

- name: Mark podnetwork applied
  file:
    path: /etc/.kubeadm-podnetwork-complete
    state: directory
  when: pod_network_type != "none"

- name: Wait until the kube-dns pod is up and running
  shell: >
    kubectl get pods --all-namespaces | grep -P "kube-dns.+4/4.+Running"
  register: kube_dns_result
  until: kube_dns_result.rc == 0
  retries: 60
  delay: 3
  ignore_errors: yes
  when: pod_network_type != "none"
